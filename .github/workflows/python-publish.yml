# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        sudo apt-get install libjson-c-dev meson
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build --sdist
    - name: Publish package to TestPyPI
      # upload to PyPI on every tag starting with 'v'
      # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
      # alternatively, to publish when a GitHub Release is created, use the following rule:
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    # - name: Publish package to PyPI
    #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    #   if: github.event_name == 'release' && github.event.action == 'published'
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
